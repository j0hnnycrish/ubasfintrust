name: Deploy Frontend (Pages) and API (Worker) to Cloudflare

on:
  push:
    branches: [ main ]

jobs:
  pages:
    name: Build and Deploy Frontend to Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20.19.0
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'

      - name: Install deps
        run: npm ci

      - name: Build frontend
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
        run: npm run build

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx --yes wrangler@4.30.0 pages deploy dist --project-name "${{ secrets.CLOUDFLARE_PAGES_PROJECT }}"

  worker:
    name: Deploy Worker API
    needs: pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 20.19.0
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'

      - name: Install worker deps
        working-directory: edge-worker
        run: npm install --no-audit --no-fund

      - name: Configure Worker secrets
        working-directory: edge-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo -n "$JWT_SECRET" | npx --yes wrangler@4.30.0 secret put JWT_SECRET --config wrangler.toml --name ubasfintrust
          if [ -n "$DATABASE_URL" ]; then
            echo -n "$DATABASE_URL" | npx --yes wrangler@4.30.0 secret put DATABASE_URL --config wrangler.toml --name ubasfintrust
          fi

      - name: Deploy Worker
        working-directory: edge-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npx --yes wrangler@4.30.0 deploy --config wrangler.toml
