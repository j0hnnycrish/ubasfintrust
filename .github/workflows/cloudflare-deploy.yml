name: Deploy Frontend (Pages) and Worker

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.0

      - name: Install frontend deps and build
        run: |
          npm ci
          npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Install wrangler
        run: npm i -g wrangler

      - name: Create Pages project if missing
        run: |
          RAW_NAME="${PAGES_PROJECT_NAME:-$REPO_NAME}"
          # Sanitize to meet Cloudflare Pages constraints:
          # 1-58 chars, lowercase, digits, dashes only; cannot start/end with '-'
          # Lowercase
          NAME=$(echo "$RAW_NAME" | tr '[:upper:]' '[:lower:]')
          # Replace invalid chars with '-'
          NAME=$(echo "$NAME" | sed -E 's/[^a-z0-9-]+/-/g')
          # Collapse multiple '-'
          NAME=$(echo "$NAME" | sed -E 's/-{2,}/-/g')
          # Trim leading/trailing '-'
          NAME=$(echo "$NAME" | sed -E 's/^-+//; s/-+$//')
          # Enforce max length 58
          NAME=${NAME:0:58}
          # Trim again just in case
          NAME=$(echo "$NAME" | sed -E 's/^-+//; s/-+$//')
          # Fallback to sanitized repo name if empty after sanitization
          REPO_SAN=$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9-]+/-/g' | sed -E 's/-{2,}/-/g' | sed -E 's/^-+//; s/-+$//')
          REPO_SAN=${REPO_SAN:0:58}
          REPO_SAN=$(echo "$REPO_SAN" | sed -E 's/^-+//; s/-+$//')
          if [ -z "$NAME" ]; then NAME="$REPO_SAN"; fi
          echo "Using Pages project: $NAME"
          # Create will fail if the project already exists; that's fine.
          wrangler pages project create "$NAME" --production-branch=main || echo "Pages project exists or could not be created"
        env:
          PAGES_PROJECT_NAME: ${{ secrets.CLOUDFLARE_PAGES_PROJECT }}
          REPO_NAME: ${{ github.event.repository.name }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Publish to Cloudflare Pages (wrangler)
        run: |
          RAW_NAME="${PAGES_PROJECT_NAME:-$REPO_NAME}"
          NAME=$(echo "$RAW_NAME" | tr '[:upper:]' '[:lower:]')
          NAME=$(echo "$NAME" | sed -E 's/[^a-z0-9-]+/-/g')
          NAME=$(echo "$NAME" | sed -E 's/-{2,}/-/g')
          NAME=$(echo "$NAME" | sed -E 's/^-+//; s/-+$//')
          NAME=${NAME:0:58}
          NAME=$(echo "$NAME" | sed -E 's/^-+//; s/-+$//')
          REPO_SAN=$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9-]+/-/g' | sed -E 's/-{2,}/-/g' | sed -E 's/^-+//; s/-+$//')
          REPO_SAN=${REPO_SAN:0:58}
          REPO_SAN=$(echo "$REPO_SAN" | sed -E 's/^-+//; s/-+$//')
          if [ -z "$NAME" ]; then NAME="$REPO_SAN"; fi
          echo "Deploying to Pages project: $NAME"
          wrangler pages deploy dist --project-name="$NAME" --branch=main
        env:
          PAGES_PROJECT_NAME: ${{ secrets.CLOUDFLARE_PAGES_PROJECT }}
          REPO_NAME: ${{ github.event.repository.name }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      

      - name: Publish Worker
        working-directory: edge-worker
        run: |
          if grep -q 'REPLACE_WITH_KV_ID' wrangler.toml || grep -q 'REPLACE_WITH_D1_ID' wrangler.toml; then
            echo "Skipping Worker deploy: wrangler.toml still has placeholder KV/D1 IDs. Update KV and/or D1 IDs and push to deploy the Worker."
            exit 0
          fi
          npm ci
          if [ -n "${{ secrets.JWT_SECRET }}" ]; then echo "${{ secrets.JWT_SECRET }}" | wrangler secret put JWT_SECRET; fi
          if [ -n "${{ secrets.DATABASE_URL }}" ]; then echo "${{ secrets.DATABASE_URL }}" | wrangler secret put DATABASE_URL; fi
          wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
